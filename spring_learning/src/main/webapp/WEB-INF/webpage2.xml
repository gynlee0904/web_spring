<?xml version="1.0" encoding="UTF-8"?>
<!-- webpage.xml과 비교해서 보기 -->
<!-- 기본 엔진을 mvc형태로 바꿈 : 스프링에서 기본으로 mvc형태 코드를 작성하며, 실행이됨 -->
<beans:beans xmlns="http://www.springframework.org/schema/mvc" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
		<!-- 방화벽 문제가 있어서 https에서 http로 변경  -->
	
	<!-- @을 이용하여 각 클래스별로 mvc 형태 구현하겠다는 부분 -->
	<annotation-driven></annotation-driven>
	
	<!-- resources : 패키지를 정하여 설정하는 태그 -->
	<!-- location="/패키지명" mapping="/패키지명" -->
	<!-- location="/" mapping="/**" => 아무 패키지나 다 만들수 있도록 제약을 풀어둔것 -->
	<resources location="/" mapping="/**"></resources>
	
	<!-- View형태를 어떤 형태의 파일로 보여지도록 할지 환경설정하는 부분 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- beans:property : -->
		<beans:property name="prefix" value="/"></beans:property> 
		<!-- name="prefix" : jsp파일이 모여있는 디렉토리 설정  
			 value="/" : do를 띄워야 jsp가 실행되도록 하는것. jsp 단독으로 실행 불가하게함 -->
<!-- 		<beans:property name="prefix" value="/WEB-INF/view/"></beans:property>  -->
		<beans:property name="suffix" value=".jsp"></beans:property>
		<!-- name="suffix" : 컨트롤러에서 view파일의 확장자를 설정할 수 있음 
			 value=".jsp" : 경로에 .jsp를 붙여줌 -->
	</beans:bean>
<!-- 	<beans:bean class="spring_learning.mainpage"></beans:bean>   -->
	<!-- class="컨트롤러의패키지명.클래스명" -->
	<!-- 컨트롤러 위쪽에서 고장나면 아래쪽도 작동안됨. 문제 발생시 해당되는 컨트롤러클래스bean부분 주석처리할것 -->
	
<!-- 	<beans:bean class="spring_learning.mainpage02"></beans:bean> 컨트롤러 추가시마다 붙여줌 -->
<!-- 	<beans:bean class="spring_learning.mainpage03"></beans:bean> -->
<!-- 	<beans:bean class="spring_learning.macbook"></beans:bean> -->
		<!-- ↑위는 컨트롤러만 풀어두게됨. 인터페이스, 매퍼 등은 보안걸려있음 
 	 		 ↓아래처럼 쓰면 해당 패키지 안에 있는 어노테이션 붙은 클래스는 다 작동되게 함  -->
	
	<context:component-scan base-package="spring_learning,etc_model" />
	<!-- context : 전체 그룹을 관리하는 태그 -->
	<!-- base-package="" : 자바패키지를 말하며 해당 패키지에 있는 모든 @을 사용할수 있도록 오픈함
	 	 패키지가 여러개 있으면 ""안에 ,로 계속 붙여쓰면 됨 -->
	
	
	
	
	
	<!-- IO를 사용하기 위한 환경설정 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding" value="utf-8" />  <!-- defaultEncoding : 파일명의 기본 언어셋. 한글로 날아왔을때 안깨지도록 언어셋 설정 -->
		<beans:property name="maxUploadSize" value="-1" />  
		<!-- maxUploadSize : 첨부할 파일의 최대용량크기 (2097152=최대2MB까지설정한것. -1이라고 쓰면 용량제한없음)
			 설정값보다 큰 용량 첨부시 서버 뒤짐. ★★-1로 설정해두고 컨트롤러에서 첨부용량 조건문으로 제어하기★★ --> 
		<beans:property name="maxInMemorySize" value="2097152" />  
		<!-- maxInMemorySize : tomcat에서 사용되는 메모리사이즈.(파일업로드시 사용되는 메모리양) 파일전송시 메모리를 얼마나 쓸건지 설정(2MB). 
			 설정값을 넘는 파일이 넘어오면 쪼개서 저장함(저장속도 느려질수있음) -->
	</beans:bean>
	
</beans:beans>