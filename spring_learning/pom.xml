<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>spring_learning</groupId>
  <artifactId>spring_learning</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>spring_learning</name>
  <description>spring_learning</description>
  
  <!-- 배포파일에 맞춰 압축파일을 생성하는 라이브러리 -->
  <build>
  	<plugins>
	  	<plugin>
	  		<groupId>org.apache.maven.plugins</groupId>
	  		<artifactId>maven-war-plugin</artifactId>
	  		<version>3.3.2</version>
	  	</plugin>
  	</plugins>
  </build>
  
  <!-- 플젝에 필요한 각종 라이브러리 세팅 -->
  <dependencies>
  	<!-- mysql 라이브러리 -->
  	<dependency>
    	<groupId>mysql</groupId>
    	<artifactId>mysql-connector-java</artifactId>
    	<version>8.0.30</version>
	</dependency>
	
	<!-- 자바를 웹으로 사용할수 있게 하는 servlet API -->
	<dependency>
    	<groupId>javax.servlet</groupId>
    	<artifactId>javax.servlet-api</artifactId>
    	<version>3.1.0</version>
    	<scope>provided</scope>
	</dependency>
	
	<!-- tomcat 라이브러리(WAS버전 세팅)  -->
	<dependency>
    	<groupId>org.apache.tomcat</groupId>
    	<artifactId>tomcat-catalina</artifactId>
    	<version>8.5.61</version>
	</dependency>
	
	<!-- DBCP : 데이터베이스 커넥션 (스프링,스프링부트에서 쓰임)-->
	<dependency>
    	<groupId>commons-dbcp</groupId>
    	<artifactId>commons-dbcp</artifactId>
    	<version>1.4</version>
	</dependency>
	
	<!-- Spring MVC 라이브러리 -->
	<dependency>
    	<groupId>org.springframework</groupId>
    	<artifactId>spring-webmvc</artifactId>
    	<version>5.3.39</version>
	</dependency>
	
	<!-- spring JDBC: mysql서버접속 환경설정 라이브러리 => Model, Controller, View에서 사용가능 -->
	<dependency>
    	<groupId>org.springframework</groupId>
    	<artifactId>spring-jdbc</artifactId>
    	<version>5.3.39</version>
	</dependency>
	
	<!-- JSTL 라이브러리(JSP+JSTL언어를 사용하기 위함, 스프링에서 사용) -->
	<dependency>
	    <groupId>javax.servlet</groupId>
	    <artifactId>jstl</artifactId>
	    <version>1.2</version>
	</dependency>
	
	<!-- Lombok(DTO,VO:setter, getter를 편하게 만들어줌) -->
	<dependency>
	    <groupId>org.projectlombok</groupId>
	    <artifactId>lombok</artifactId>
	    <version>1.18.36</version>
	    <scope>provided</scope>
	</dependency>
	
	<!-- file upload 라이브러리 -->
	<dependency>
	    <groupId>commons-fileupload</groupId>
	    <artifactId>commons-fileupload</artifactId>
	    <version>1.5</version>
	</dependency>
	
	<!-- mybatis -->
	<dependency>
	    <groupId>org.mybatis</groupId>
	    <artifactId>mybatis</artifactId>
	    <version>3.5.6</version>
	</dependency>
	
	<!-- mybatis-spring -->
	<dependency>
	    <groupId>org.mybatis</groupId>
	    <artifactId>mybatis-spring</artifactId>
	    <version>2.0.6</version>
	</dependency>
	
	<!-- slf4j-api : JDK 및 라이브러리 호출에 대한 정보,로그기록 출력 라이브러리  -->
	<dependency>
	    <groupId>org.slf4j</groupId>
	    <artifactId>slf4j-api</artifactId>
	    <version>2.0.17</version>
	</dependency>
	
	<!-- slf4j-log4j12 : 자바 또는 컨트롤러, 모델 등을 구현시 결과값의 처리정보를 기록하는 라이브러리 -->
	<dependency>
	    <groupId>org.slf4j</groupId>
	    <artifactId>slf4j-log4j12</artifactId>
	    <version>2.0.17</version>
	    <scope>runtime</scope>  <!-- test->runtime : 작동되고있을 때 실시간으로 기록하도록 변경 -->
	</dependency>
	
	<!-- jcl-over-slf4j : 서버오류 및 소켓통신,포트통신일 경우 로그 기록하는 라이브러리 -->
	<dependency>
	    <groupId>org.slf4j</groupId>
	    <artifactId>jcl-over-slf4j</artifactId>
	    <version>2.0.17</version>
	    <scope>runtime</scope>
	</dependency>
	
	<!-- log4j : 로그기록 console에 출력시켜줌 -->
	<dependency>
	    <groupId>log4j</groupId>
	    <artifactId>log4j</artifactId>
	    <version>1.2.17</version>
	    <scope>runtime</scope>
	</dependency>
	
	
	<!-- 데이터베이스 관련 db_config.xml아이디에 의존성주입하기 위해 사용 -->
	<dependency>
	    <groupId>javax.inject</groupId>
	    <artifactId>javax.inject</artifactId>
	    <version>1</version>
	</dependency>
	
	<!-- json in java (API, .json파일 생성)-->
	<dependency>
	    <groupId>org.json</groupId>
	    <artifactId>json</artifactId>
	    <version>20250107</version>
	</dependency>
	
	<!-- json-simple (API, .json파일 생성) -->
	<dependency>
	    <groupId>com.googlecode.json-simple</groupId>
	    <artifactId>json-simple</artifactId>
	    <version>1.1.1</version>
	</dependency>
	
	<!-- mail-api -->
	<dependency>
	    <groupId>javax.mail</groupId>
	    <artifactId>javax.mail-api</artifactId>
	    <version>1.4.7</version>
	</dependency>
	
	<!-- mail -->
	<dependency>
	    <groupId>javax.mail</groupId>
	    <artifactId>mail</artifactId>
	    <version>1.4.7</version>
	</dependency>
	
	<!-- activation -->
	<dependency>
	    <groupId>javax.activation</groupId>
	    <artifactId>activation</artifactId>
	    <version>1.1.1</version>
	</dependency>	
	
  </dependencies>
  
  <!--  JDK 세팅버전 -->
  <properties>
  	<maven.compiler.source>11</maven.compiler.source>
  	<maven.compiler.target>11</maven.compiler.target>
  </properties>
</project>